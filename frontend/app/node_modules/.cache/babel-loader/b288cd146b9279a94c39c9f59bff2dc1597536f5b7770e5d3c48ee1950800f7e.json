{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saravanan Sasikumar\\\\OneDrive\\\\Desktop\\\\Saasproject\\\\frontend\\\\app\\\\src\\\\components\\\\TenantList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, Badge } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { updateTenant, deleteTenant, listTenants } from '../redux/actions/tenantAction';\nimport TenantListItem from './TenantListItem';\nimport ManageTenantModal from './ManageTenantModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TenantList = ({\n  tenants\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [selectedTenant, setSelectedTenant] = useState(null);\n  const [showManageModal, setShowManageModal] = useState(false);\n  const handleManage = tenant => {\n    setSelectedTenant(tenant);\n    setShowManageModal(true);\n  };\n  const handleUpdateTenant = async (id, data) => {\n    await dispatch(updateTenant(id, data));\n    dispatch(listTenants()); // Refresh list after update\n  };\n  const handleDelete = tenantId => {\n    if (window.confirm('Confirm delete?')) {\n      dispatch(deleteTenant(tenantId)).then(() => {\n        dispatch(listTenants());\n      });\n    }\n  };\n  const getPlanBadge = plan => {\n    switch (plan) {\n      case 'enterprise':\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"primary\",\n          children: \"Enterprise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this);\n      case 'professional':\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"success\",\n          children: \"Professional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 35\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"warning\",\n          text: \"dark\",\n          children: \"Free\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tenants === null || tenants === void 0 ? void 0 : tenants.map(tenant => /*#__PURE__*/_jsxDEV(TenantListItem, {\n          tenant: tenant,\n          onManage: handleManage,\n          getPlanBadge: getPlanBadge,\n          onDelete: handleDelete\n        }, tenant._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ManageTenantModal, {\n      tenant: selectedTenant,\n      show: showManageModal,\n      onClose: () => setShowManageModal(false),\n      onUpdate: handleUpdateTenant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TenantList, \"MKAciOAtTss2i5liLgGMSvxeg2M=\", false, function () {\n  return [useDispatch];\n});\n_c = TenantList;\nexport default TenantList;\nvar _c;\n$RefreshReg$(_c, \"TenantList\");","map":{"version":3,"names":["React","useState","Table","Badge","useDispatch","updateTenant","deleteTenant","listTenants","TenantListItem","ManageTenantModal","jsxDEV","_jsxDEV","Fragment","_Fragment","TenantList","tenants","_s","dispatch","selectedTenant","setSelectedTenant","showManageModal","setShowManageModal","handleManage","tenant","handleUpdateTenant","id","data","handleDelete","tenantId","window","confirm","then","getPlanBadge","plan","bg","children","fileName","_jsxFileName","lineNumber","columnNumber","text","striped","bordered","hover","map","onManage","onDelete","_id","show","onClose","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/Saravanan Sasikumar/OneDrive/Desktop/Saasproject/frontend/app/src/components/TenantList.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, Badge } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateTenant, deleteTenant, listTenants } from '../redux/actions/tenantAction';\r\nimport TenantListItem from './TenantListItem';\r\nimport ManageTenantModal from './ManageTenantModal';\r\n\r\nconst TenantList = ({ tenants }) => {\r\n  const dispatch = useDispatch();\r\n  const [selectedTenant, setSelectedTenant] = useState(null);\r\n  const [showManageModal, setShowManageModal] = useState(false);\r\n\r\n  const handleManage = (tenant) => {\r\n    setSelectedTenant(tenant);\r\n    setShowManageModal(true);\r\n  };\r\n\r\n  const handleUpdateTenant = async (id, data) => {\r\n    await dispatch(updateTenant(id, data));\r\n    dispatch(listTenants());  // Refresh list after update\r\n  };\r\n\r\n  const handleDelete = (tenantId) => {\r\n    if (window.confirm('Confirm delete?')) {\r\n      dispatch(deleteTenant(tenantId)).then(() => {\r\n        dispatch(listTenants());\r\n      });\r\n    }\r\n  };\r\n\r\n  const getPlanBadge = (plan) => {\r\n    switch (plan) {\r\n      case 'enterprise': return <Badge bg=\"primary\">Enterprise</Badge>;\r\n      case 'professional': return <Badge bg=\"success\">Professional</Badge>;\r\n      default: return <Badge bg=\"warning\" text=\"dark\">Free</Badge>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Plan</th>\r\n            <th>Status</th>\r\n            <th>Products</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tenants?.map(tenant => (\r\n            <TenantListItem\r\n              key={tenant._id}\r\n              tenant={tenant}\r\n              onManage={handleManage}\r\n              getPlanBadge={getPlanBadge}\r\n              onDelete={handleDelete}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <ManageTenantModal\r\n        tenant={selectedTenant}\r\n        show={showManageModal}\r\n        onClose={() => setShowManageModal(false)}\r\n        onUpdate={handleUpdateTenant}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TenantList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}