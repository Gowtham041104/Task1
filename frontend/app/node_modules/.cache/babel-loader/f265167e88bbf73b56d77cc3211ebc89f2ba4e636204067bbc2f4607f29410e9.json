{"ast":null,"code":"import axios from 'axios';\nimport { TENANT_LIST_REQUEST, TENANT_LIST_SUCCESS, TENANT_LIST_FAIL, TENANT_CREATE_REQUEST, TENANT_CREATE_SUCCESS, TENANT_CREATE_FAIL, TENANT_UPDATE_REQUEST, TENANT_UPDATE_SUCCESS, TENANT_UPDATE_FAIL, TENANT_DELETE_REQUEST, TENANT_DELETE_SUCCESS, TENANT_DELETE_FAIL, TENANT_DETAILS_REQUEST, TENANT_DETAILS_SUCCESS, TENANT_DETAILS_FAIL } from '../constants/tenantConstant';\n\n// ðŸ”¹ List all tenants\nexport const listTenants = () => async dispatch => {\n  try {\n    dispatch({\n      type: TENANT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/tenants');\n    dispatch({\n      type: TENANT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: TENANT_LIST_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message\n    });\n  }\n};\n\n// ðŸ”¹ Create a new tenant\nexport const createTenant = tenantData => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TENANT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    if (!userInfo || !userInfo.token) {\n      throw new Error('User authentication required');\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const payload = {\n      ...tenantData,\n      createdBy: userInfo.userId || userInfo._id\n    };\n    const {\n      data\n    } = await axios.post('/api/tenants', payload, config);\n    dispatch({\n      type: TENANT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    dispatch({\n      type: TENANT_CREATE_FAIL,\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message\n    });\n  }\n};\n\n// ðŸ”¹ Update a tenant\nexport const updateTenant = (id, tenantData) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TENANT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    if (!userInfo || !userInfo.token) {\n      throw new Error('User not authenticated');\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/tenants/${id}`, tenantData, config);\n    dispatch({\n      type: TENANT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    dispatch({\n      type: TENANT_UPDATE_FAIL,\n      payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message\n    });\n  }\n};\n\n// ðŸ”¹ Delete a tenant\nexport const deleteTenant = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TENANT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    if (!userInfo || !userInfo.token) {\n      throw new Error('User not authenticated');\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/tenants/${id}`, config);\n    dispatch({\n      type: TENANT_DELETE_SUCCESS,\n      payload: id\n    });\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    dispatch({\n      type: TENANT_DELETE_FAIL,\n      payload: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message\n    });\n  }\n};\n\n// ðŸ”¹ Get details of a single tenant\nexport const getTenantDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: TENANT_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    if (!userInfo || !userInfo.token) {\n      throw new Error('User not authenticated');\n    }\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/tenants/${id}`, config);\n    dispatch({\n      type: TENANT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    dispatch({\n      type: TENANT_DETAILS_FAIL,\n      payload: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","TENANT_LIST_REQUEST","TENANT_LIST_SUCCESS","TENANT_LIST_FAIL","TENANT_CREATE_REQUEST","TENANT_CREATE_SUCCESS","TENANT_CREATE_FAIL","TENANT_UPDATE_REQUEST","TENANT_UPDATE_SUCCESS","TENANT_UPDATE_FAIL","TENANT_DELETE_REQUEST","TENANT_DELETE_SUCCESS","TENANT_DELETE_FAIL","TENANT_DETAILS_REQUEST","TENANT_DETAILS_SUCCESS","TENANT_DETAILS_FAIL","listTenants","dispatch","type","data","get","payload","error","_error$response","_error$response$data","response","message","createTenant","tenantData","getState","userLogin","userInfo","token","Error","config","headers","Authorization","createdBy","userId","_id","post","_error$response2","_error$response2$data","updateTenant","id","put","_error$response3","_error$response3$data","deleteTenant","delete","_error$response4","_error$response4$data","getTenantDetails","_error$response5","_error$response5$data"],"sources":["C:/Users/Saravanan Sasikumar/OneDrive/Desktop/Saasproject/frontend/app/src/redux/actions/tenantAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  TENANT_LIST_REQUEST,\r\n  TENANT_LIST_SUCCESS,\r\n  TENANT_LIST_FAIL,\r\n  TENANT_CREATE_REQUEST,\r\n  TENANT_CREATE_SUCCESS,\r\n  TENANT_CREATE_FAIL,\r\n  TENANT_UPDATE_REQUEST,\r\n  TENANT_UPDATE_SUCCESS,\r\n  TENANT_UPDATE_FAIL,\r\n  TENANT_DELETE_REQUEST,\r\n  TENANT_DELETE_SUCCESS,\r\n  TENANT_DELETE_FAIL,\r\n  TENANT_DETAILS_REQUEST,\r\n  TENANT_DETAILS_SUCCESS,\r\n  TENANT_DETAILS_FAIL,\r\n} from '../constants/tenantConstant';\r\n\r\n// ðŸ”¹ List all tenants\r\nexport const listTenants = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TENANT_LIST_REQUEST });\r\n    const { data } = await axios.get('/api/tenants');\r\n    dispatch({ type: TENANT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TENANT_LIST_FAIL,\r\n      payload: error.response?.data?.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// ðŸ”¹ Create a new tenant\r\nexport const createTenant = (tenantData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TENANT_CREATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    if (!userInfo || !userInfo.token) {\r\n      throw new Error('User authentication required');\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const payload = {\r\n      ...tenantData,\r\n      createdBy: userInfo.userId || userInfo._id,\r\n    };\r\n\r\n    const { data } = await axios.post('/api/tenants', payload, config);\r\n\r\n    dispatch({ type: TENANT_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TENANT_CREATE_FAIL,\r\n      payload: error.response?.data?.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// ðŸ”¹ Update a tenant\r\nexport const updateTenant = (id, tenantData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TENANT_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    if (!userInfo || !userInfo.token) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/tenants/${id}`, tenantData, config);\r\n\r\n    dispatch({ type: TENANT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TENANT_UPDATE_FAIL,\r\n      payload: error.response?.data?.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// ðŸ”¹ Delete a tenant\r\nexport const deleteTenant = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TENANT_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    if (!userInfo || !userInfo.token) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/tenants/${id}`, config);\r\n\r\n    dispatch({ type: TENANT_DELETE_SUCCESS, payload: id });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TENANT_DELETE_FAIL,\r\n      payload: error.response?.data?.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// ðŸ”¹ Get details of a single tenant\r\nexport const getTenantDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TENANT_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    if (!userInfo || !userInfo.token) {\r\n      throw new Error('User not authenticated');\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/tenants/${id}`, config);\r\n\r\n    dispatch({ type: TENANT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TENANT_DETAILS_FAIL,\r\n      payload: error.response?.data?.message || error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}